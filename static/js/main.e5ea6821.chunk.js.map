{"version":3,"sources":["Components/Home.js","Components/Movie.js","Components/Movies.js","Components/Book.js","Components/Books.js","App.js","reportWebVitals.js","index.js"],"names":["Main","className","to","Movie","movie","src","backdrop_path","alt","title","vote_average","overview","length","slice","id","IMDB_API","process","Movies","state","genre","genreName","movieList","movieListByGenre","foundMovieListByGenre","getGenreList","axios","get","then","response","setState","data","genres","catch","error","console","log","getMovieList","movieListData","results","movieListData2","movieFilter","filter","genre_ids","includes","handleMovieSearchByGenre","event","genreId","find","name","window","scrollTo","this","map","onClick","React","Component","Book","book","book_image","author","description","NYTIMES_API","Books","bookCategoryList","bookByCategoryList","bookCategory","foundBookListByCategory","getBookCatagory","bookCategoryListData","getBookByCategory","category","books","list_name","handleBookSearchList","searchQuery","list_name_encoded","App","basename","from","path","exact","component","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5ea6821.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Home.scss';\r\n\r\nfunction Main(){\r\n    return(\r\n        <section className='main'>\r\n            <h2 className='main__heading2'> As the program is going to end soon, it's time to plan!!! </h2>\r\n            <h2 className='main__heading3'> How are you going to reward yourselves???</h2>\r\n            <div className = 'main__linkGroup'>\r\n                <Link to='./books' className='link main__img main__img--1'>\r\n                    <p className = 'main__imgTitle'>Books</p>\r\n                </Link>\r\n                <Link to='./movies' className='link main__img main__img--2' >\r\n                    <p className = 'main__imgTitle'>Movies</p>\r\n                </Link>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default Main;\r\n","import './Styles.scss';\r\n\r\nfunction Movie({movie}){\r\n    return(\r\n        <section className=\"flip-card\" key={movie.id}>\r\n            <div className=\"flip-card-inner\">\r\n                <div className=\"flip-card-front\">\r\n                    <img src={`https://image.tmdb.org/t/p/original/${movie.backdrop_path}`} alt='movie poster'\r\n                        className='section__poster' />\r\n                </div>\r\n                <div className=\"flip-card-back\">\r\n                    <h3 className='flip-card-back__heading'>{movie.title}</h3>\r\n                    <p className='flip-card-back__author rating'>Rating: {movie.vote_average}</p>\r\n                    <p className='flip-card-back__desc'>\r\n                        {movie.overview.length > 200 ?\r\n                            movie.overview.slice(0, 100) + '...' : movie.overview}</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default Movie;","import React from 'react';\r\nimport axios from 'axios';\r\nimport './Styles.scss';\r\nimport Movie from './Movie';\r\nconst IMDB_API = process.env.REACT_APP_IMDB_API; \r\n\r\nclass Movies extends React.Component {\r\n    state = {\r\n        genre: [],\r\n        genreName: '',\r\n        movieList: [],\r\n        movieListByGenre: [],\r\n        foundMovieListByGenre: false,\r\n    }\r\n\r\n    // get all the genre list:\r\n\r\n    getGenreList = () => {\r\n        axios\r\n            .get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${IMDB_API}`)\r\n            .then(response => {\r\n                // console.log(response.data.genres);\r\n                this.setState({ genre: response.data.genres });\r\n            })\r\n            .catch(error => console.log(''))\r\n    }\r\n\r\n    // get whole movie List \r\n\r\n    getMovieList = () => {\r\n        axios\r\n            .get(`https://api.themoviedb.org/3/movie/popular?api_key=${IMDB_API}&language=en-US&page=1`)\r\n            .then(response => {\r\n                // console.log(response.data.results);\r\n                let movieListData = response.data.results;\r\n                axios\r\n                    .get(`https://api.themoviedb.org/3/movie/popular?api_key=${IMDB_API}&language=en-US&page=2`)\r\n                    .then(response => {\r\n                        let movieListData2 = [...movieListData, ...response.data.results];\r\n                        this.setState({ movieList: movieListData2 });\r\n                        let movieFilter = this.state.movieList.filter(movie => movie.genre_ids.includes(10751))\r\n                        this.setState({ movieListByGenre: movieFilter, foundMovieListByGenre: true, genreName: 'Family' });\r\n                    })\r\n            })\r\n            .catch(error => console.log('Error in movie data', error));\r\n    }\r\n\r\n    // handle movie List search:\r\n\r\n    handleMovieSearchByGenre = (event, genreId) => {\r\n        let movieFilter = this.state.movieList.filter(movie => movie.genre_ids.includes(genreId))\r\n        this.setState({ movieListByGenre: movieFilter, foundMovieListByGenre: true });\r\n        let genre = this.state.genre.find(genre => genre.id === genreId);\r\n        this.setState({genreName: genre.name});\r\n        window.scrollTo(0, 0)\r\n    }\r\n    componentDidMount() {\r\n        this.getGenreList();\r\n        this.getMovieList();\r\n    }\r\n    render() {\r\n        return (\r\n            <section className='section'>\r\n                <h2 className='section__heading2'>List of IMDB movie genres. Choose your favourite one!!</h2>\r\n                {this.state.genreName ?\r\n                    <h2 className='section__titleSecond'>Here are some suggestions on {this.state.genreName} </h2>\r\n                    : ''\r\n                }\r\n                <div className= 'wholeRegular'>\r\n                    {(this.state.genre) ?\r\n                        <ul className='list whole-left'>\r\n                            {this.state.genre.map(genre => \r\n                                <li className='item bookItem' key={genre.id}\r\n                                    onClick={(event) => this.handleMovieSearchByGenre(event, genre.id)}>\r\n                                    {genre.name}\r\n                                </li>\r\n                            )}\r\n                        </ul>\r\n                        : <h2>Loading..</h2>\r\n                    }\r\n                    <div className='whole-right'>\r\n                        {this.state.foundMovieListByGenre ?\r\n                            this.state.movieListByGenre.length > 0 ?\r\n                                <ul className='section__list listByGenre'>\r\n                                    {\r\n                                        this.state.movieListByGenre.map(movie => <Movie movie={movie} key={movie.id}/>)\r\n                                    }\r\n                                </ul>\r\n                                : <h3 className='errorHeading'>Oops!!! No movie in this category. Try another one!!!</h3>\r\n                            : ''\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nexport default Movies;","import './Styles.scss';\r\n\r\nfunction Book({book}){\r\n    return(\r\n        <section className='flip-card'>\r\n            <div className='flip-card-inner'>\r\n                <div className='flip-card-front'>\r\n                    <img src={book.book_image} alt=\"book poster\" className= 'section__poster'/>\r\n                </div>\r\n                <div className=\"flip-card-back\">\r\n                    <h3 className='flip-card-back__heading'>{book.title}</h3> \r\n                    <p className='flip-card-back__author'>{book.author}</p> \r\n                    <p className='flip-card-back__desc'>{book.description}</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default Book;","import React from 'react';\r\nimport axios from 'axios';\r\nimport './Styles.scss';\r\nimport Book from './Book';\r\nconst NYTIMES_API = process.env.REACT_APP_NYTIMES_API;\r\n\r\nclass Books extends React.Component{\r\n    state = {\r\n        bookCategoryList: [],\r\n        bookByCategoryList: [],\r\n        bookCategory:'Education',\r\n        foundBookListByCategory: false,\r\n    }\r\n\r\n// get all the categories:\r\n\r\n    getBookCatagory= () =>{\r\n        axios\r\n            .get(`https://api.nytimes.com/svc/books/v3/lists/names.json?api-key=${NYTIMES_API}`)\r\n            .then(response =>{\r\n                let bookCategoryListData = response.data.results.slice(27);\r\n                this.setState({bookCategoryList: bookCategoryListData});\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n// get all the books by category:\r\n\r\n    getBookByCategory = (category) =>{\r\n        axios\r\n            .get(`https://api.nytimes.com/svc/books/v3/lists/current/${category}.json?api-key=${NYTIMES_API}`)\r\n            .then(response =>{\r\n                // console.log(response.data.results);\r\n                this.setState(\r\n                    {bookByCategoryList: response.data.results.books,\r\n                    bookCategory: response.data.results.list_name,\r\n                    foundBookListByCategory: true\r\n                });\r\n            })\r\n    }\r\n    \r\n// handle book search:\r\n\r\n    handleBookSearchList = (event, searchQuery) =>{\r\n        this.getBookByCategory(searchQuery);\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n// Component Mounting:\r\n\r\n    componentDidMount(){\r\n        this.getBookCatagory();\r\n        this.getBookByCategory('Education');\r\n    }\r\n    render(){\r\n        return(\r\n            <section className='section background--book'>\r\n                <h2 className='section__heading2'>Choose your favourite book from NY times Best sellers book category</h2>\r\n                {this.state.bookCategory? \r\n                    <h2 className = 'section__titleSecond'>Here are some suggestions on {this.state.bookCategory} </h2>\r\n                    : ''\r\n                }\r\n                <div className= {this.state.foundBookListByCategory.length? 'whole': 'wholeRegular'}>\r\n                    {(this.state.bookCategoryList)?\r\n                        <ul className= 'list whole-left'>\r\n                        {this.state.bookCategoryList.map(bookCategory => \r\n                            <li className='item bookItem' key={bookCategory.list_name} \r\n                                onClick = {(event) => this.handleBookSearchList(event, bookCategory.list_name_encoded)}\r\n                            >\r\n                            {bookCategory.list_name}\r\n                            </li>)\r\n                        }\r\n                        </ul>\r\n                    : <h2>Loading..</h2>\r\n                    }\r\n                    <div className = 'whole-right'>\r\n                        {(this.state.foundBookListByCategory)?\r\n                            this.state.bookByCategoryList.length > 0? \r\n                                <ul className= 'section__list listByGenre'>\r\n                                {\r\n                                    this.state.bookByCategoryList.map(book => <Book book={book} key={book.title}/>)\r\n                                }\r\n                                </ul>\r\n                            : <h3>Oops!!! No movie in this category. Try another one!!!</h3>\r\n                        : ''\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport default Books","import './App.scss';\nimport React from 'react';\nimport Home from './Components/Home';\nimport Movies from './Components/Movies';\nimport Books from './Components/Books';\n// require('dotenv').config();\nimport { HashRouter, Switch, Route, Redirect, Link } from \"react-router-dom\";\n\nfunction App()  {\n    return (\n        <div className='page'>\n            <HashRouter basename='/'>\n                <div className=\"bg\"></div>\n                <div className=\"bg bg2\"></div>\n                <div className=\"bg bg3\"></div>\n                <nav className= 'nav'>\n                    <Link to='/' className={`link nav__link`}>Home</Link>\n                    <Link to='/books' className={`link nav__link `}>Books</Link>\n                    <Link to='/movies' className={`link nav__link`}>Movies </Link>\n                </nav>\n                <h1 className='heading'> Life After BrainStation</h1>\n                <Switch>\n                    <Redirect from='/home' to='/'/>\n                    <Route path='/' exact component={Home}/>\n                    <Route path='/movies' component={Movies}/>\n                    <Route path='/books' component={Books}/>\n                </Switch>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n        <App />\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}